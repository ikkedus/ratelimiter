version: 1.0
description: this creates triggers if rules and combines number of executions with the data object

input:
  - host
  - service_desc
  - time
  - data
  - max_tries
tasks:
  getExecutions:
    action: ratelimiter.getNumberOfExecutions
    input:
      host: <% ctx (host) %>
      service_desc: <% ctx (service_desc) %>
      time: <% ctx(time) %>
    next:
      - when: <% succeeded() and result().count < ctx(max_tries) %>
        publish:
        - count: <% ctx(count) %>
        do: addExecution
      - when: <% succeeded() %>
  addExecution:
    action: ratelimiter.addExecution
    input:
      host: <% ctx(host) %>
      service_desc: <% ctx(service_desc) %>
      data: <% ctx(data) %>
    next:
      - when: <% succeded() %>
        do: createTrigger
  createTrigger:
    action: core.inject_trigger
    input:
      trigger: ratelimiter.ratelimited
    payload:
      data: <% ctx(data) %>
      count: <% ctx(count) %>
    next:
      - when: <% succeeded() %>
      - when: <% failed() %>

